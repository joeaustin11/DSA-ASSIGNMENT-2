#include <stdio.h>
#include <stdlib.h>

void multiplyMatrices(int **a, int **b, int **result, int rowA, int colA, int colB) {
    for (int i = 0; i < rowA; i++) {
        for (int j = 0; j < colB; j++) {
            result[i][j] = 0; // Initialize result
            for (int k = 0; k < colA; k++) {
                result[i][j] += a[i][k] * b[k][j];
            }
        }
    }
}

int main() {
    int rowA, colA, rowB, colB;

    printf("Enter rows and columns for first matrix: ");
    scanf("%d %d", &rowA, &colA);
    printf("Enter rows and columns for second matrix: ");
    scanf("%d %d", &rowB, &colB);

    if (colA != rowB) {
        printf("Matrix multiplication is not possible.\n");
        return 1;
    }

    // Allocate memory for matrices
    int **a = (int **)malloc(rowA * sizeof(int *));
    int **b = (int **)malloc(rowB * sizeof(int *));
    int **result = (int **)malloc(rowA * sizeof(int *));
    
    for (int i = 0; i < rowA; i++) a[i] = (int *)malloc(colA * sizeof(int));
    for (int i = 0; i < rowB; i++) b[i] = (int *)malloc(colB * sizeof(int));
    for (int i = 0; i < rowA; i++) result[i] = (int *)malloc(colB * sizeof(int));

    // Input matrices
    printf("Enter elements of first matrix:\n");
    for (int i = 0; i < rowA; i++)
        for (int j = 0; j < colA; j++)
            scanf("%d", &a[i][j]);

    printf("Enter elements of second matrix:\n");
    for (int i = 0; i < rowB; i++)
        for (int j = 0; j < colB; j++)
            scanf("%d", &b[i][j]);

    // Perform multiplication
    multiplyMatrices(a, b, result, rowA, colA, colB);

    // Display result
    printf("Resultant matrix:\n");
    for (int i = 0; i < rowA; i++) {
        for (int j = 0; j < colB; j++) {
            printf("%d ", result[i][j]);
        }
        printf("\n");
    }

    // Free memory
    for (int i = 0; i < rowA; i++) free(a[i]);
    for (int i = 0; i < rowB; i++) free(b[i]);
    for (int i = 0; i < rowA; i++) free(result[i]);
    free(a);
    free(b);
    free(result);

    return 0;
}
